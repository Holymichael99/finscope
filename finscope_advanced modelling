import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import LabelEncoder, StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report, confusion_matrix
from sklearn.cluster import KMeans
from sklearn.decomposition import PCA

# Load the dataset
file_path = "German_FinTechCompanies.csv"  # Change if needed
df = pd.read_csv(file_path)

# ============== PART 1: PREDICT INACTIVITY / INSOLVENCY ==============

# Target: Predict 'Inactivity' or 'Insolvency'
df['Inactive'] = df['Date of inactivity'].notna().astype(int)

# Select features
model_df = df[['Legal form', 'Founding year', 'Bank Cooperation', 'Insolvency', 'Inactive']].dropna()

# Encode legal form
model_df['Legal form'] = LabelEncoder().fit_transform(model_df['Legal form'])

# Train/Test split
X = model_df[['Legal form', 'Founding year', 'Bank Cooperation']]
y = model_df['Inactive']  # Use 'Insolvency' to train another model if needed

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Train Random Forest
clf = RandomForestClassifier(n_estimators=100, random_state=42)
clf.fit(X_train, y_train)

# Evaluate
y_pred = clf.predict(X_test)
print("Classification Report - Predicting Inactivity:\n")
print(classification_report(y_test, y_pred))
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))