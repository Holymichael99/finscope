# Import libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Set plot style
sns.set(style="whitegrid")
plt.rcParams["figure.figsize"] = (12, 6)

# Load data
file_path = "German_FinTechCompanies.csv"  # Update as needed
df = pd.read_csv(file_path)

# =======================
# 1. Lifespan Estimation
# =======================
# Convert dates
df['Founding year'] = pd.to_numeric(df['Founding year'], errors='coerce')
df['Date of inactivity'] = pd.to_datetime(df['Date of inactivity'], errors='coerce')
df['Lifespan'] = df['Date of inactivity'].dt.year - df['Founding year']

# Only consider rows with both founding year and inactivity date
lifespan_df = df.dropna(subset=['Founding year', 'Date of inactivity', 'Lifespan'])
lifespan_df = lifespan_df[lifespan_df['Lifespan'] >= 0]

# Plot histogram of lifespans
plt.figure()
sns.histplot(lifespan_df['Lifespan'], bins=range(0, 21), kde=True, color="tomato")
plt.title("Estimated Company Lifespan (Years)")
plt.xlabel("Years Active")
plt.ylabel("Number of Companies")
plt.tight_layout()
plt.show()

# =============================
# 2. Insolvency and Liquidation
# =============================
insolvency_counts = df['Insolvency'].value_counts().rename({0: 'No', 1: 'Yes'})
liquidation_counts = df['Liquidation'].value_counts().rename({0: 'No', 1: 'Yes'})

# Plot insolvency and liquidation side-by-side
fig, ax = plt.subplots(1, 2, figsize=(14, 5))

sns.barplot(x=insolvency_counts.index, y=insolvency_counts.values, ax=ax[0], palette='Reds')
ax[0].set_title("Insolvency Status")
ax[0].set_ylabel("Number of Companies")

sns.barplot(x=liquidation_counts.index, y=liquidation_counts.values, ax=ax[1], palette='Purples')
ax[1].set_title("Liquidation Status")
ax[1].set_ylabel("Number of Companies")

plt.tight_layout()
plt.show()

# =======================
# 3. Founder Influence
# =======================
# Count companies with a listed founder
df['Has Founder'] = df['Founder'].notna()
founder_counts = df['Has Founder'].value_counts().rename({True: 'With Founder', False: 'No Founder'})

plt.figure()
sns.barplot(x=founder_counts.index, y=founder_counts.values, palette="Blues")
plt.title("Companies With vs Without Listed Founders")
plt.ylabel("Number of Companies")
plt.tight_layout()
plt.show()

# Identify repeat founders
# Split multiple founders by delimiter ';'
founder_series = df['Founder'].dropna().str.split(';').explode().str.strip()

# Count founders who appear more than once
repeat_founders = founder_series.value_counts()
repeat_founders = repeat_founders[repeat_founders > 1]

# Display top repeat founders
print("Top Repeat Founders (Appeared in Multiple Companies):")
print(repeat_founders.head(10))